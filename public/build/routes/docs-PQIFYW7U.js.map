{
  "version": 3,
  "sources": ["../../../app/routes/docs.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/docs.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/docs.tsx\");\n  import.meta.hot.lastModified = \"1757534982000\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { defer } from \"@remix-run/node\";\nimport { Await, useLoaderData } from \"@remix-run/react\";\nfunction slowText(ms = 2500) {\n  return new Promise(res => setTimeout(() => res(\"This heavy docs content arrived after a delay.\"), ms));\n}\nexport async function loader() {\n  return defer({\n    intro: slowText(2500)\n  });\n}\nexport default function Docs() {\n  _s();\n  const data = useLoaderData();\n  return <div>\n      <h1>Docs</h1>\n      <p>Small intro is visible right away; long docs stream in below.</p>\n\n      <React.Suspense fallback={<div className=\"card\"><div className=\"skeleton\" style={{\n        width: '100%',\n        height: '6rem'\n      }}></div><p>Loading docs\u2026</p></div>}>\n        <Await resolve={data.intro}>\n          {t => <div className=\"card\">\n              <p>{t}</p>\n            </div>}\n        </Await>\n      </React.Suspense>\n    </div>;\n}\n_s(Docs, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Docs;\nvar _c;\n$RefreshReg$(_c, \"Docs\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAAkB;AAClB,kBAAsB;AAchB;AAnCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,0BAA4B,EAAE;AAAA,EACvE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqB;AACrB,cAAY,IAAI,eAAe;AACjC;AAce,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,SAAO,mDAAC,SACJ;AAAA,uDAAC,QAAG,oBAAJ;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,IACR,mDAAC,OAAE,6EAAH;AAAA;AAAA;AAAA;AAAA,WAAgE;AAAA,IAEhE,mDAAC,aAAAA,QAAM,UAAN,EAAe,UAAU,mDAAC,SAAI,WAAU,QAAO;AAAA,yDAAC,SAAI,WAAU,YAAW,OAAO;AAAA,QAC/E,OAAO;AAAA,QACP,QAAQ;AAAA,MACV,KAHgD;AAAA;AAAA;AAAA;AAAA,aAG7C;AAAA,MAAM,mDAAC,OAAE,kCAAH;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,SAHC;AAAA;AAAA;AAAA;AAAA,WAGG,GAC3B,6DAAC,SAAM,SAAS,KAAK,OAClB,iBAAK,mDAAC,SAAI,WAAU,QACjB,6DAAC,OAAG,eAAJ;AAAA;AAAA;AAAA;AAAA,WAAM,KADJ;AAAA;AAAA;AAAA;AAAA,WAEJ,KAHJ;AAAA;AAAA;AAAA;AAAA,WAIA,KARF;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OAbG;AAAA;AAAA;AAAA;AAAA,SAcL;AACJ;AACA,GAAG,MAAM,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["React"]
}
