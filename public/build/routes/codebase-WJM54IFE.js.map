{
  "version": 3,
  "sources": ["../../../app/routes/codebase.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/codebase.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/codebase.tsx\");\n  import.meta.hot.lastModified = \"1757563126747.3037\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { defer } from \"@remix-run/node\";\nimport { Await, useLoaderData } from \"@remix-run/react\";\n\n/**\n * T\u1EA1o m\u1ED9t Promise s\u1EBD resolve sau m\u1ED9t kho\u1EA3ng th\u1EDDi gian delay\n * H\u1EEFu \u00EDch \u0111\u1EC3 m\u00F4 ph\u1ECFng c\u00E1c thao t\u00E1c b\u1EA5t \u0111\u1ED3ng b\u1ED9 ch\u1EADm trong qu\u00E1 tr\u00ECnh ph\u00E1t tri\u1EC3n\n *\n * @template T - Ki\u1EC3u d\u1EEF li\u1EC7u c\u1EE7a gi\u00E1 tr\u1ECB s\u1EBD \u0111\u01B0\u1EE3c resolve\n * @param value - Gi\u00E1 tr\u1ECB s\u1EBD \u0111\u01B0\u1EE3c resolve sau khi delay\n * @param ms - Th\u1EDDi gian delay t\u00EDnh b\u1EB1ng mili gi\u00E2y (m\u1EB7c \u0111\u1ECBnh: 3000ms)\n * @returns Promise<T> - Promise s\u1EBD resolve v\u1EDBi gi\u00E1 tr\u1ECB \u0111\u00E3 cho sau kho\u1EA3ng th\u1EDDi gian delay\n */\nfunction slowResolve(value, ms = 3000) {\n  return new Promise(res => setTimeout(() => res(value), ms));\n}\n\n/**\n * Loader function c\u1EE7a Remix \u0111\u1EC3 t\u1EA3i d\u1EEF li\u1EC7u cho route\n * H\u00E0m n\u00E0y ch\u1EA1y tr\u00EAn server v\u00E0 tr\u1EA3 v\u1EC1 d\u1EEF li\u1EC7u \u0111\u01B0\u1EE3c stream b\u1EA5t \u0111\u1ED3ng b\u1ED9\n * S\u1EED d\u1EE5ng defer() \u0111\u1EC3 cho ph\u00E9p streaming d\u1EEF li\u1EC7u khi n\u00F3 s\u1EB5n s\u00E0ng\n *\n * @returns \u0110\u1ED1i t\u01B0\u1EE3ng ch\u1EE9a metadata v\u00E0 c\u00E1c promise cho d\u1EEF li\u1EC7u b\u1EA5t \u0111\u1ED3ng b\u1ED9\n */\nexport async function loader() {\n  // Metadata t\u0129nh \u0111\u01B0\u1EE3c tr\u1EA3 v\u1EC1 ngay l\u1EADp t\u1EE9c\n  const meta = {\n    title: \"Codebase overview\"\n  };\n\n  // D\u1EEF li\u1EC7u repository list - resolve sau 3.5 gi\u00E2y \u0111\u1EC3 m\u00F4 ph\u1ECFng t\u1EA3i ch\u1EADm\n  const repoList = slowResolve([{\n    id: 1,\n    name: \"remix-core\"\n  }, {\n    id: 2,\n    name: \"ui-kit\"\n  }, {\n    id: 3,\n    name: \"analytics\"\n  }], 3500);\n\n  // D\u1EEF li\u1EC7u metrics - resolve sau 4.5 gi\u00E2y (ch\u1EADm h\u01A1n repoList)\n  const metrics = slowResolve({\n    stars: 1234,\n    contributors: 42\n  }, 4500);\n\n  // Tr\u1EA3 v\u1EC1 d\u1EEF li\u1EC7u v\u1EDBi defer() \u0111\u1EC3 cho ph\u00E9p streaming b\u1EA5t \u0111\u1ED3ng b\u1ED9\n  return defer({\n    meta,\n    repoList,\n    metrics\n  });\n}\n\n/**\n * Component ch\u00EDnh c\u1EE7a route Codebase\n * Hi\u1EC3n th\u1ECB giao di\u1EC7n ng\u01B0\u1EDDi d\u00F9ng v\u1EDBi d\u1EEF li\u1EC7u \u0111\u01B0\u1EE3c t\u1EA3i b\u1EA5t \u0111\u1ED3ng b\u1ED9\n * S\u1EED d\u1EE5ng React.Suspense v\u00E0 Await \u0111\u1EC3 x\u1EED l\u00FD streaming d\u1EEF li\u1EC7u\n *\n * @returns JSX element - Giao di\u1EC7n c\u1EE7a trang Codebase\n */\nexport default function CodebaseRoute() {\n  _s();\n  // L\u1EA5y d\u1EEF li\u1EC7u t\u1EEB loader, bao g\u1ED3m c\u00E1c promise cho d\u1EEF li\u1EC7u b\u1EA5t \u0111\u1ED3ng b\u1ED9\n  // L\u1EA5y d\u1EEF li\u1EC7u t\u1EEB loader, bao g\u1ED3m c\u00E1c promise cho d\u1EEF li\u1EC7u b\u1EA5t \u0111\u1ED3ng b\u1ED9\n  // S\u1EED d\u1EE5ng any \u0111\u1EC3 tr\u00E1nh l\u1ED7i type v\u1EDBi JsonifyObject trong defer()\n  const data = useLoaderData();\n  return <div>\n      <h1>Codebase</h1>\n      <p>Layout renders immediately; heavy data is streamed and shown when ready.</p>\n\n      <div className=\"card\">\n        <h3>Overview</h3>\n        <p>Some quick static overview (fast).</p>\n      </div>\n\n      <React.Suspense fallback={<div className=\"card\"><div className=\"skeleton\" style={{\n        width: '50%'\n      }}></div><p>Loading repository list\u2026</p></div>}>\n        <Await resolve={data.repoList}>\n          {repos => <div className=\"card\">\n              <h3>Repositories</h3>\n              <ul>\n                {repos.map(r => <li key={r.id}>{r.name}</li>)}\n              </ul>\n            </div>}\n        </Await>\n      </React.Suspense>\n\n      <React.Suspense fallback={<div className=\"card\"><p>Loading metrics\u2026</p></div>}>\n        <Await resolve={data.metrics}>\n          {m => <div className=\"card\">\n              <h3>Metrics</h3>\n              <p>\u2B50 Stars: {m.stars}</p>\n              <p>\uD83D\uDC65 Contributors: {m.contributors}</p>\n            </div>}\n        </Await>\n      </React.Suspense>\n    </div>;\n}\n_s(CodebaseRoute, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = CodebaseRoute;\nvar _c;\n$RefreshReg$(_c, \"CodebaseRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["React"]
}
